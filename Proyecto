#lang racket
;Conectar con motor mysql

(require db )
(require racket/gui/base)

(define mysql (mysql-connect #:user "root"
                             #:database "Vacunaciones"
                             #:password "mysql"))


;.....................................................................
;Registrar un nuevo infante
(define (registrar_infante registro nombre apellido genero papa mama direccion
                           fecha_nacimiento fecha_registro numTelefono poblacion )
  (if(not (null? (buscar_infante registro)))
     "El infante ya se encuentra registrado y tiene un calendario"
     (begin  
       (query mysql (armar_insercion_infante registro nombre apellido genero direccion fecha_nacimiento
       (asignar_calendario 0 registro (todas_las_vacunas) fecha_nacimiento) 
     )))))


(define (buscar_infante infante )(query-list mysql (string-append "select num_regcivil from infante where num_regcivil="
                                                                  (number->string infante))))
(define (armar_insercion_infante r n a g d f1 f2 pa ma tel pobl)
  (string-append "insert into infante values ("(number->string r)","n","a"," g","d","f1","f2","pa","ma","tel","pobl")"))

;......................................................................................................
;...........................................................................
;.................................................



;...............................................
;Implementacion del calendario de vacunacion
;el calendario es implementado inmediatamante despues del registro del infante

;Obtenemos todas las vacunas que estan en el plan de vacunacion del estado para un infante de no mayor a 5 años


;---------------------------------------
;--------------------------------------
;------------------------------------
;vacunas sin aplicar
(define(sin_aplicar infante)
  (query-rows mysql (string-append "select vac_id from calendario where aplicada=0 and num_regcivil=" (number->string infante))))

;Ahora se gurda las vacunas que no han sido aplicada para el infante
(define vacunas_sin_aplicar (sin_aplicar 1))
; se crear una funcion recursiva para realizar la insercion
(define (insertar_fechas lista infante fecha)
  (if(null? lista)
     "Termino"
     (query mysql "insert (fecha_) into calendario values")
   ))
;obtener vacunas
(define(todas_las_vacunas)
  (query-list mysql "Select vac_id from vacuna"
   ))


;Implementacion de aplicacion de una vacuan
(define (buscar_edad vacuna)
  (query-list mysql (string-append "select edad from vacuna where vac_id=" (number->string vacuna))))

(define (meses_a_dias meses)
  (* meses 30))

;;;aqui la logica de asignacion de calendario de vacunacion para el menor
(define (armar_insert infante vacuna fecha)
  (string-append "insert into calendario values(" (number->string infante) "," (number->string vacuna) ",adddate(" fecha ","
                 (number->string (meses_a_dias (car (buscar_edad vacuna)))) "),null,0)")) 
;con la parte anteriar queda lista el dml para la insercion en la tabla


(define (asignar_calendario trash infante vacunas fecha_inicio)
  (if (null? vacunas)
      "calendario creado"
      (asignar_calendario (query-exec mysql (armar_insert infante (car vacunas) fecha_inicio)) infante (cdr vacunas) fecha_inicio)))    
     
(define (vacunar_infante infante vacuna fecha)
  (query mysql (string-append "update calendario set fecha_vacunacion="fecha",aplicada=true where num_regcivil="
                              (number->string infante) " and vac_id=" (number->string vacuna))))

 ;en caso de que un menor sea registrado tarde saber como afecta esto a lo demas
; sabar si las dos listas son iguales
;queda pendiente comprobar el tamaño
(define (son_iguales lista1 lista2)
  (if(null? lista1)
     #t
     (if(=(car lista1) (car lista2))
        (son_iguales (cdr lista1) (cdr lista2))
        #f
        )
     
     ))
;funcion para saber si un año es biciesto 
;saber si dos fechas solo difieren en el dia
(define (difieren_en_dias fecha1 fecha2)
  (if(= (car(cdr fecha1)) (car (cdr fecha2)))
     (if(= (car (cdr (cdr fecha1))) (car (cdr (cdr fecha2))))
        #t
        #f
        )
     #f
     
     ))  

;obtener el mes ingresado
; queda modificar si es biciesto el año
(define (dias_del_mes m)
  (if(= m 1)
     31
     (if(= m 2)
        28
        (if(= m 3)
           31
           (if(= m 4)
              30
              (if(= m 5)
                 31
                 (if(= m 6)
                    30
                    (if(= m 7)
                       31
                       (if(= m 8)
                          31
                          (if(= m 9)
                             30
                             (if(= m 10)
                                31
                                (if(= m 11)
                                   30
                                   (if(= m 12)
                                      31
                                      #f
                                      )))))))))))))

;funcion aumentar el mes de una fecha
;en caso de que el mes sea 12 se aumenta el año
(define(aumentar_mes fecha)
  (if(= (car (cdr fecha)) 12)
     (append (list (car fecha)) (list 1) (list (+ (car (cdr (cdr fecha))) 1)))
     (append (list (car fecha)) (list (+ (car (cdr fecha)) 1)) (cdr (cdr fecha)))  
     ))
;funcion para calcular el numero de dias entre dos fechas
(define(numero_dias fecha1 fecha2 suma)
  (if (difieren_en_dias fecha1 fecha2)
      (+ suma (- (car fecha2) (car fecha1)))
      (numero_dias (aumentar_mes fecha1) fecha2 (+ (dias_del_mes (car (cdr fecha1))) suma))
      )
  )



;------parte de oscar-------------------------
;______________________________________________
;_____________________________________________
;_____________________________________________
;Ventana principal
(define principalVentana (new frame% [label "Control Vacunacion"]))
(define panel1 (new horizontal-panel% [parent principalVentana]
                                     [alignment '(center center)]))


(new button% [parent panel1] [label "Registrar Infante"] [callback (lambda (button event)
                           (send RegMenor show #t))])

(new button% [parent panel1] [label "Consultar datos menor"][callback (lambda (button event)
                          (send ventanaInfoMenor show #t))])
(new button% [parent panel1] [label "Nuevo registro vacuna"][callback (lambda (button event)
                           (send panel1 show #t))])


;Ventana registro de un menor
(define RegMenor (new frame% [label "REGISTRO DE NUEVO INFANTE"]))
(define numReg(new text-field% [parent RegMenor] [label "Numero registro civil"]))
(define nombre(new text-field% [parent RegMenor] [label "Nombres"]))
(define apellido(new text-field% [parent RegMenor] [label "Apellidos"]))
(define fechaNac(new text-field% [parent RegMenor] [label "Fecha Nacimiento(YYYY-MM-DD)"]))
(define fechaRegistro(new text-field% [parent RegMenor] [label "Fecha Registro(YYYY-MM-DD)"]))
(define nombreMa(new text-field% [parent RegMenor] [label "Nombre de la madre"]))
(define nombrePa(new text-field% [parent RegMenor] [label "Nombre del padre"]))
(define telefono(new text-field% [parent RegMenor] [label "Telefono de contacto"]))
(define direccion(new text-field% [parent RegMenor] [label "Direccion"]))
(define poblacion(new combo-field% [label "Poblacion pertenece"]
                       [choices '("Indigena" "Rural")] [parent RegMenor] [init-value "Rural"] ))


(define genero (new combo-field%
                         (label "Género                  ")
                         (parent RegMenor)
                         (choices '("Masculino" "Femenino"))
                         (init-value "Masculino")))

(define panel (new horizontal-panel% [parent RegMenor]
                                     [alignment '(center center)]))

(new button% [parent panel] [label "Cancelar"][callback (lambda (button event) (send panel1 show #f))])
(new button% [parent panel] [label "Registrar"][callback (lambda (button event)
                           ( preparar_llamado_insert)
                                              )])
(define (preparar_llamado_insert)
  (registrar_infante
  (string->number(send numReg get-value)) (string-append "'" (send nombre get-value) "'")
  (string-append "'" (send apellido get-value) "'") (string-append "'"(send genero get-value) "'")
  (string-append "'" (send nombrePa get-value) "'") (string-append "'" (send nombreMa get-value) "'")
  (string-append "'" (send direccion get-value) "'") (string-append "'" (send fechaNac get-value) "'")
  (string-append "'" (send fechaRegistro get-value) "'") (send telefono get-value)
  (string-append "'" (send poblacion get-value) "'")))

(send RegMenor show #f)



;========================================================================
;Ventana mostrar informacion de menor
(define ventanaInfoMenor (new dialog%
                              [label "Calendario Vacunacion"]
                              ))


(define numR(new text-field% [parent ventanaInfoMenor]
                 [label "Numero registro civil"]))
(define informacion " N Registro civil\t    Nombres\t    Apellidos\t     Acudiente\t      Direccion\t        Genero\t          poblacion \n")
(define txtInfoMenor (new text-field%
                       [label ""]
                       [init-value informacion]
                       [vert-margin 50]
                       [min-height 250]
                       [min-width 800]
                       [parent ventanaInfoMenor]
                       [style (list 'multiple)]
                       [callback (lambda (button event)
                                   (send ventanaInfoMenor show #t))]
                       ))

(define regis "")
(define primerNombreM "")
(define segundoNombreM "")
(define primerApellidoM "")
(define segundoApellidoM "")
(define nombreAcudienteM "")
(define direccionM "")
(define generoM "")
(define poblacionM "")
(define btn-mostrar-informacion (new button% [parent ventanaInfoMenor]
                                     [label "cargar datos"]
                                     [callback (lambda (button event)
                                                 (set! regis (send numR get-value))
                                                 (set! primerNombreM (vector->values (car(query-rows mysql (string-append "SELECT `primerNombre` FROM `menor` WHERE registroCivil =1")))))
                                                 (set! segundoNombreM (vector->values (car(query-rows mysql (string-append "SELECT `segundoNombre` FROM `menor` WHERE registroCivil =1")))))
                                                 (set! primerApellidoM (vector->values (car(query-rows mysql (string-append "SELECT `primerApellido` FROM `menor` WHERE registroCivil =1")))))
                                                 (set! segundoApellidoM (vector->values (car(query-rows mysql (string-append "SELECT `segundoApellido` FROM `menor` WHERE registroCivil =1")))))
                                                 (set! direccionM (vector->values (car(query-rows mysql (string-append"SELECT direccion FROM `menor` WHERE registroCivil = 1 ")))))
                                                 (set! nombreAcudienteM (vector->values (car(query-rows mysql (string-append"SELECT nombreAcudiente FROM `menor` WHERE registroCivil = 1 ")))))
                                                 (set! generoM (vector->values (car(query-rows mysql (string-append"SELECT genero FROM `menor` WHERE registroCivil = 1 ")))))
                                                 (set! poblacionM (vector->values (car(query-rows mysql (string-append"SELECT poblacion FROM `menor` WHERE registroCivil = 1 ")))))
                                                 (set! informacion (string-append "N Registro civil\t    Nombres\t    Apellidos\t     Acudiente\t      Direccion\t        Genero\t          poblacion \n\n        "regis"\t\t"primerNombreM""segundoNombreM"\t\t"primerApellidoM""segundoApellidoM"\t\t"nombreAcudienteM"\t\t"direccionM"                         "generoM"                      "poblacionM""))
                                                
                                                 (send txtInfoMenor set-value informacion))]))
                                                 





(send ventanaInfoMenor show #f)
(send principalVentana show #t)








 


