#lang racket
;Conectar con motor mysql

(require db )
(require racket/gui/base)

(define mysql (mysql-connect #:user "root"
                             #:database "Vacunaciones"
                             #:password "mysql"))


;.....................................................................
;Registrar un nuevo infante
(define (registrar_infante registro nombre apellido genero papa mama direccion
                           fecha_nacimiento fecha_registro numTelefono poblacion )
  (if(not (null? (buscar_infante registro)))
     "El infante ya se encuentra registrado y tiene un calendario"
     (begin
       
           (query mysql (armar_insercion_infante registro nombre apellido genero direccion fecha_nacimiento fecha_registro papa mama numTelefono poblacion ))
           (if (> 365 (dias_entre_fechas fecha_nacimiento fecha_registro) )
               (asignar_calendario 0 registro (todas_las_vacunas 1) (string-append "'"fecha_registro "'"))
               (asignar_calendario 0 registro (todas_las_vacunas 0) (string-append "'"fecha_registro "'")) 
           )
       
       
      
     )))


(define (buscar_infante infante )(query-list mysql (string-append "select num_regcivil from infante where num_regcivil="
                                                                  (number->string infante))))
(define (armar_insercion_infante r n a g d f1 f2 pa ma tel pobl)
  (string-append "insert into infante values ("(number->string r)","n","a"," g","d","(string-append "'" f1 "'")
                                                                     ","(string-append "'"f2"'") ","pa","ma","tel","pobl")"))

;......................................................................................................
;...........................................................................
;.................................................



;...............................................
;Implementacion del calendario de vacunacion
;el calendario es implementado inmediatamante despues del registro del infante

;Obtenemos todas las vacunas que estan en el plan de vacunacion del estado para un infante de no mayor a 5 años


;---------------------------------------
;--------------------------------------
;------------------------------------
;vacunas sin aplicar
(define(sin_aplicar infante)
  (query-rows mysql (string-append "select vac_id from calendario where aplicada=0 and num_regcivil=" (number->string infante))))

;Ahora se gurda las vacunas que no han sido aplicada para el infante
(define vacunas_sin_aplicar (sin_aplicar 1))
; se crear una funcion recursiva para realizar la insercion
(define (insertar_fechas lista infante fecha)
  (if(null? lista)
     "Termino"
     (query mysql "insert (fecha_) into calendario values") 
   ))
;obtener vacunas
(define(todas_las_vacunas tardio)
  (if(= tardio 0)
     (query-list mysql "Select vac_id from vacuna")
     (query-list mysql "Select vac_id from vacunaTardia1")
   ))


;Implementacion de aplicacion de una vacuan
(define (buscar_edad vacuna)
  (query-list mysql (string-append "select edad from vacuna where vac_id=" (number->string vacuna))))

(define (meses_a_dias meses)
  (* meses 30))

;;;aqui la logica de asignacion de calendario de vacunacion para el menor
(define (armar_insert infante vacuna fecha)
  (string-append "insert into calendario values(" (number->string infante) "," (number->string vacuna) ",adddate(" fecha ","
                 (number->string (meses_a_dias (car (buscar_edad vacuna)))) "),null,0)")) 
;con la parte anteriar queda lista el dml para la insercion en la tabla


(define (asignar_calendario trash infante vacunas fecha_inicio)
  (if (null? vacunas)
      "calendario creado"
      (asignar_calendario (query-exec mysql (armar_insert infante (car vacunas) fecha_inicio)) infante (cdr vacunas) fecha_inicio)))    
     


 ;en caso de que un menor sea registrado tarde saber como afecta esto a lo demas
; sabar si las dos listas son iguales
;queda pendiente comprobar el tamaño
(define (son_iguales lista1 lista2)
  (if(null? lista1)
     #t
     (if(=(car lista1) (car lista2))
        (son_iguales (cdr lista1) (cdr lista2))
        #f
        )
     
     ))
;funcion para saber si un año es biciesto 
;saber si dos fechas solo difieren en el dia
(define (difieren_en_dias fecha1 fecha2)
  (if(= (car(cdr fecha1)) (car (cdr fecha2)))
     (if(= (car (cdr (cdr fecha1))) (car (cdr (cdr fecha2))))
        #t
        #f
        )
     #f
     
     ))  

;obtener el mes ingresado
; queda modificar si es biciesto el año
(define (dias_del_mes m)
  (if(= m 1)
     31
     (if(= m 2)
        28
        (if(= m 3)
           31
           (if(= m 4)
              30
              (if(= m 5)
                 31
                 (if(= m 6)
                    30
                    (if(= m 7)
                       31
                       (if(= m 8)
                          31
                          (if(= m 9)
                             30
                             (if(= m 10)
                                31
                                (if(= m 11)
                                   30
                                   (if(= m 12)
                                      31
                                      #f
                                      )))))))))))))

;funcion aumentar el mes de una fecha
;en caso de que el mes sea 12 se aumenta el año
(define(aumentar_mes fecha)
  (if(= (car (cdr fecha)) 12)
     (append (list (car fecha)) (list 1) (list (+ (car (cdr (cdr fecha))) 1)))
     (append (list (car fecha)) (list (+ (car (cdr fecha)) 1)) (cdr (cdr fecha)))  
     ))
;funcion para calcular el numero de dias entre dos fechas
(define (numero_dias fecha1 fecha2 suma)
  
  (if (difieren_en_dias fecha1 fecha2)
      (+ suma (- (car fecha2) (car fecha1)))
      (numero_dias (aumentar_mes fecha1) fecha2 (+ (dias_del_mes (car (cdr fecha1))) suma))
      ))
  

(define (comvertir_fecha fecha)
  (reverse (list  (string->number (substring fecha 0 4))
                  (string->number (substring fecha 5 7))
                  (string->number (substring fecha 8 10)))))
(define (dias_entre_fechas fecha1 fecha2)
  
    (numero_dias (comvertir_fecha fecha1) (comvertir_fecha fecha2) 0)
  )

;......................................................
;implementacion de aplicacion de una vacuana
(define fecha_programada "")

(define (vacunar_infante infante fecha_programada fecha_vacunacion)
  (begin
  (query-exec mysql (string-append "update calendario set fecha_vacunacion='"fecha_vacunacion"',aplicada=true where num_regcivil="
                              infante " and fecha_programada='"fecha_programada "'"))
  (query-exec mysql (string-append "update calendario set fecha_programada=adddate(fecha_programada,"
                            (number->string(numero_dias (comvertir_fecha fecha_programada) (comvertir_fecha fecha_vacunacion) 0))
                            "),alerta=true where fecha_programada>'"fecha_programada"' and fecha_programada<'" 
                            fecha_vacunacion"' and num_regcivil="infante
                            ))
  ))

(define (prioridad_vacuna infante fecha)
  (begin
   (set! fecha_programada (query-value mysql (string-append "select cast(fecha_programada as char) from calendario where num_regcivil=" infante
                                       " and fecha_programada<'"fecha "' and aplicada=false limit 1")))
   (query-value mysql (string-append "select cast(fecha_programada as char) from calendario where num_regcivil=" infante
                                       " and fecha_programada<'"fecha "' and aplicada=false limit 1"))
   ))  
(define (buscar_vacunas_pendientes infante fecha)
  (query-rows mysql (string-append "select ca.vac_id, nombre, cast(fecha_programada as char) from vacuna vac inner join calendario ca"
                              " on ca.vac_id=vac.vac_id where ca.num_regcivil=" infante
                              " and aplicada=0 and fecha_programada='" (prioridad_vacuna infante fecha)"'" )))
(define lista_temporal '())
(define (mostrar_vacunas cabeza cola cadena) 
  (if (null? cola)
      (begin
       (set! lista_temporal (vector->list cabeza))
      (string-append cadena (number->string (car lista_temporal)) "\t\t" (car (cdr lista_temporal)) "\t\t" (car (cdr (cdr lista_temporal)))
                                                            "\n\n"
                                                            ))
      
      (begin
       (set! lista_temporal (vector->list cabeza))
      (mostrar_vacunas (car cola) (cdr cola) 
     (string-append cadena (number->string (car lista_temporal)) "\t\t" (car (cdr lista_temporal)) "\t\t "(car (cdr (cdr lista_temporal)))
                    "\n\n"
                            ))
      )))

(define (vacunas_aplicadas infante)
  (query-rows mysql (string-append "select ca.vac_id,nombre,cast(fecha_vacunacion as char) from calendario ca inner join vacuna va on ca.vac_id=va.vac_id"
                                   " and num_regcivil="infante " and aplicada=true")))


;------parte de oscar-------------------------
;______________________________________________n
;_____________________________________________
;_____________________________________________
;Ventana principal
(define principalVentana (new frame% [label "Control Vacunacion"]
                        [min-height 250]
                       [min-width 800]))
(define panel1 (new horizontal-panel% [parent principalVentana]
                                     [alignment '(center center)]))


(new button% [parent panel1] [label "Registrar Infante"] [callback (lambda (button event)
                           (send RegMenor show #t))])

(new button% [parent panel1] [label "Consultar datos menor"][callback (lambda (button event)
                          (send ventanaInfoMenor show #t))])
(new button% [parent panel1] [label "Nueva Vacunacion"][callback (lambda (button event)
                           (send ventana_vacunacion show #t))])

;Ventana de la vacunacion de un menor
(define encabezado1 "Id Vacuna\t\tNombre\t\tFecha De Apliaccion")
(define encabezado2 "Id Vacuna\t\tNombre\t\tFecha Programada\n")
(define cuello "")
(define cuerpo "")
(define total "")
(define ventana_vacunacion(new frame%
                               [label "Vacunacion de infante"]
                               ))
(define info_calen "Id vacuna\t\tNombre Vacuna\t\tFecha Programada")
(define reg_infante(new text-field% [parent ventana_vacunacion] [label "Numero Registro Menor"]))
(define fecha_vacuna(new text-field% [parent ventana_vacunacion] [label "Fecha Vacunacion"]))

(define txt_calendario (new text-field%
                       [label " "]
                       [init-value info_calen]
                       [vert-margin 50]
                       [min-height 250]
                       [min-width 600]
                       [parent ventana_vacunacion]
                       [style (list 'multiple)]))


(define boton_vacunar(new button%
                         [parent ventana_vacunacion]
                         [label "vacunar"]
                         [callback (lambda (button event) (vacunar_infante (send reg_infante get-value) fecha_programada
                                                                           (send fecha_vacuna get-value)))]))
(define boton_buscar(new button%
                         [parent ventana_vacunacion]
                         [label "Buscar"]
                         [callback (lambda (button event) (mostrar_calendario (send reg_infante get-value)))]))


(define (mostrar_calendario infante)
  (if (null? (buscar_infante (string->number (send reg_infante get-value))))
      (begin
      (set! cuello "El infante no esta registrado")
      (send txt_calendario set-value cuello))
      (if (null? (vacunas_aplicadas infante))
         (begin
             (set! cuerpo (mostrar_vacunas (car (buscar_vacunas_pendientes (send reg_infante get-value) (send fecha_vacuna get-value))) 
                                        (cdr (buscar_vacunas_pendientes (send reg_infante get-value) (send fecha_vacuna get-value))) " "))  
             (set! cuello "\t\tInfante sin ninguna vacuna aplicada!\n\n")
             (set! total (string-append encabezado1 "\n\n--------------"
                        "-------------------Vacunas Aplicadas------------------------------\n\n"
                        cuello
                        "-------------------Vacunas Siguistes Por Aplicar------------------------\n\n"
                        encabezado2 "\n\n"
                        cuerpo 
                        ))
             (send txt_calendario set-value total)
             
             
             ) 
         (begin
              (set! cuerpo (mostrar_vacunas (car (buscar_vacunas_pendientes (send reg_infante get-value) (send fecha_vacuna get-value)))
                                        (cdr (buscar_vacunas_pendientes (send reg_infante get-value) (send fecha_vacuna get-value))) ""))
              (set! cuello (mostrar_vacunas (car (vacunas_aplicadas (send reg_infante get-value)))
                                (cdr (vacunas_aplicadas (send reg_infante get-value))) "" ))
              (set! total (string-append encabezado1 "\n\n--------------"
                        "-------------------Vacunas Aplicadas------------------------------\n\n"
                        cuello
                        "-------------------Vacunas Siguistes Por Aplicar------------------------\n\n"
                        encabezado2 "\n\n"
                        cuerpo
                   ))
              (send txt_calendario set-value total)
              
              )
         )
         )
      ) 
      
   
 
;Ventana registro de un menor
(define RegMenor (new frame% [label "REGISTRO DE NUEVO INFANTE"]))
(define numReg(new text-field% [parent RegMenor] [label "Numero registro civil"]))
(define nombre(new text-field% [parent RegMenor] [label "Nombres"]))
(define apellido(new text-field% [parent RegMenor] [label "Apellidos"]))
(define fechaNac(new text-field% [parent RegMenor] [label "Fecha Nacimiento(YYYY-MM-DD)"]))
(define fechaRegistro(new text-field% [parent RegMenor] [label "Fecha Registro(YYYY-MM-DD)"]))
(define nombreMa(new text-field% [parent RegMenor] [label "Nombre de la madre"]))
(define nombrePa(new text-field% [parent RegMenor] [label "Nombre del padre"]))
(define telefono(new text-field% [parent RegMenor] [label "Telefono de contacto"]))
(define direccion(new text-field% [parent RegMenor] [label "Direccion"]))
(define poblacion(new combo-field% [label "Poblacion pertenece"]
                       [choices '("Indigena" "Rural")] [parent RegMenor] [init-value "Rural"] ))


(define genero (new combo-field%
                         (label "Género                  ")
                         (parent RegMenor)
                         (choices '("Masculino" "Femenino"))
                         (init-value "Masculino")))

(define panel (new horizontal-panel% [parent RegMenor]
                                     [alignment '(center center)]))

(new button% [parent panel] [label "Cancelar"][callback (lambda (button event) (send panel1 show #f))])
(new button% [parent panel] [label "Registrar"][callback (lambda (button event)
                           ( preparar_llamado_insert (send panel show #f)) 
                                              )])
(define (preparar_llamado_insert)
  (registrar_infante
  (string->number (send numReg get-value)) (string-append "'" (send nombre get-value) "'")
  (string-append "'" (send apellido get-value) "'") (string-append "'"(send genero get-value) "'")
  (string-append "'" (send nombrePa get-value) "'") (string-append "'" (send nombreMa get-value) "'")
  (string-append "'" (send direccion get-value) "'") (send fechaNac get-value) (send fechaRegistro get-value)
  (send telefono get-value) (string-append "'" (send poblacion get-value) "'")))

(send RegMenor show #f)



;========================================================================
;Ventana mostrar informacion de menor

(define vacio "Infante No Registrado")

(define(traer_calendario infante)
  (query-rows mysql (string-append "select edad,nombre,dosis,cast(fecha_programada as char) from calendario ca inner join vacuna va on va.vac_id=ca.vac_id where num_regcivil=" infante )))


(define (pegar_a_info cabeza cola x )
  (if(null? cola)
         x
      (begin
       (set! lista_temporal (vector->list cabeza))
       (pegar_a_info (car cola) (cdr cola) 
       (string-append x "\nEdad: " (number->string (car lista_temporal)) "Meses\n\t\t"
                      "Nombre Vacuna: " (car (cdr lista_temporal )) "\n\t\t Dosis: "
                      (number->string (car (cdr (cdr lista_temporal)))) "\n\t\t Fecha Programada: "
                      (car (cdr (cdr (cdr lista_temporal )))) "\n\n" )
       
       )
     )))



(define ventanaInfoMenor (new dialog%
                              [label "Calendario Vacunacion"]
                              [min-height 250]
                              [min-width 800]
                              ))


(define numR(new text-field% [parent ventanaInfoMenor]
                 [label "Numero registro civil"]))
(define informacion " N Registro civil\t    Nombres\t    Apellidos\t     Acudiente\t      Direccion\t        Genero\t          poblacion \n")
(define txtInfoMenor (new text-field%
                       [label ""]
                       [init-value informacion]
                       [parent ventanaInfoMenor]
                       [style (list 'multiple)]
                       [callback (lambda (button event)
                                   (send ventanaInfoMenor show #t))]
                       ))


(define primerNombreM "")
(define segundoNombreM "")
(define primerApellidoM "")
(define segundoApellidoM "")
(define nombreAcudienteM "")
(define direccionM "")
(define generoM "")
(define poblacionM "")
(define telefonoM "")
(define nombreMama "")


(define btn-mostrar-informacion (new button% [parent ventanaInfoMenor]
                                     [label "cargar datos"]
                                     [callback (lambda (button event)
                                                 (validar_lista (send numR get-value))
                                                  (send txtInfoMenor set-value informacion))
                                                 ])) 
(define (validar_lista numR)
  (if(null?  (traer_calendario numR) )
     (begin
        (set! informacion vacio)
     
    
     )
     (begin
       (set! primerNombreM (vector->values (car(query-rows mysql
       (string-append "SELECT nombre from infante where num_regcivil=" numR))))) 
       (set! primerApellidoM (vector->values (car(query-rows mysql (string-append "SELECT apellido from infante where num_regcivil=" numR )))))
       (set! telefonoM (number->string (vector->values (car(query-rows mysql (string-append "SELECT telefono from infante where num_regcivil="numR ))))))
       (set! direccionM (vector->values (car(query-rows mysql (string-append "SELECT direccion from infante where num_regcivil="numR )))))
       (set! nombreMama (vector->values (car(query-rows mysql (string-append "SELECT madre from infante where num_regcivil="numR )))))
       (set! genero (vector->values (car(query-rows mysql (string-append "SELECT genero from infante where num_regcivil=" numR )))))
       (set! poblacionM (vector->values (car(query-rows mysql (string-append "SELECT poblacion from infante where num_regcivil="numR )))))
       (set! informacion (string-append "N Registro civil\t    Nombres\t    Apellidos\t     Acudiente\t      Direccion\t        Genero\t          poblacion \n\n"
                    numR "\t\t" primerNombreM "\t\t    "primerApellidoM"\t\t    "nombreMama"\t\t   "direccionM"      "generoM"      "telefonoM"        "poblacionM"\n\n"
       
     (pegar_a_info (car (traer_calendario numR)) (cdr (traer_calendario numR)) "")))
   )))
                                                 







(send ventanaInfoMenor show #f)

(send principalVentana show #t)












 



 


